@{
    ViewData["Title"] = "Management";
}
@model ChatbotManagement.Models.out_VM.ManagementTablesVM

<head>
    <style>
        body,
        html {
            height: 100%;
            background-size: cover;
        }

        .table1 {
            width: 100% !important;
            text-align: center;
            background: #ffffff;
            border-color: #d6d6d6;
        }

        .th1 {
            width: 10%;
        }

        .custom1 {
            border-radius: 12px !important;
            width: 65% !important;
        }

        .scrollable {
            height: 325px;
            overflow-y: scroll;
        }

        button {
            width: 12% !important;
        }

        .button2 {
            width: 20% !important;
        }

        .background-radial-gradient {
            background-image: radial-gradient(circle, #172236, #1c2a43, #223250, #273a5d, #2d436b, #2e446d, #2e456e, #2f4670, #2b4066, #26395c, #223352, #1e2d48);
        }

        .searcher {
            width: 15% !important;
        }
    </style>
</head>

<body class="background-radial-gradient">
    <div class="d-flex justify-content-center align-items-center h-50 my-3">
        <div class="border border-1 d-flex justify-content-center align-items-center row custom1">
            <h4 style="color: #d6d6d6;" class="mt-3">Files to approve</h4>
            <form id="firstTableForm">
                <div class="scrollable my-3">
                    <table class="table table-striped table1 my-2 rounded rounded-3" id="firstTable">
                        <thead>
                            <tr>
                                <th scope="col" class="th1">Solr Id</th>
                                <th scope="col" class="th1">File Name</th>
                                <th scope="col" class="th1">File Type</th>
                                <th scope="col" class="th1">Link</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.StoredFile2VM != null && Model.StoredFile2VM.Count != 0)
                            {
                                int i = 0;
                                foreach (var item in Model.StoredFile2VM)
                                {
                                    i++;
                                    string inpId = "m3" + @i.ToString();
                                    <tr>
                                        <td>@item.SolrId</td>
                                        <td>@item.FileName</td>
                                        <td>@item.FileType</td>
                                        <td>
                                            <input type="text" id=@inpId class="form-control" placeholder="Link" name="Link" aria-label="Link"
                                           aria-describedby="basic-addon1">
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td>---</td>
                                    <td>---</td>
                                    <td>---</td>
                                    <td>---</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="d-flex justify-content-end align-items-center">
                    <button type="button" class="btn btn-success mb-2" onclick="firstTable(event)">Submit</button>
                </div>
            </form>
        </div>
    </div>
    <div class="d-flex justify-content-center align-items-center h-50 my-3">
        <div class="border border-1 rounded row custom1">
            <div class="d-flex justify-content-between w-100">
                <h4 style="color: #d6d6d6;" class="mt-3 d-flex">Files</h4>
                <div class="d-flex justify-content-end align-items-center my-2 w-75">
                    <a href="@Url.Action("Management", "Management")" class="btn btn-primary mx-1" id="btnAll">All</a>
                    <a href="@Url.Action("Shown", "Management")" class="btn btn-primary mx-1" id="btnToApprove">Shown</a>
                    <a href="@Url.Action("NotShown", "Management")" class="btn btn-primary mx-1 button2" id="btnNotShown">Not Shown</a>
                </div>
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <div class="input-group w-50 mb-3">
                    <form id="searchForm" class="d-flex justify-content-between align-items-center">
                        <select id="searchAttribute" class="form-select rounded w-25">
                            <option value="solrid">Solr Id</option>
                            <option value="filename">File Name</option>
                            <option value="filetype">File Type</option>
                            <option value="link">Link</option>
                        </select>
                        <input id="searchQuery" type="search" name="searchQuery" class="form-control rounded w-50" placeholder="Enter search query"
                               aria-label="Enter search query" aria-describedby="search-addon" />
                        <button type="button" class="btn btn-outline-primary w-25" id="btnSearch">Search</button>
                    </form>
                </div>
            </div>
            <form class="scrollable my-3">
                <table class="table table-striped table1 my-2 rounded rounded-3" id="secondTable">
                    <thead>
                        <tr>
                            <th scope="col" class="th1">Solr Id</th>
                            <th scope="col" class="th1">File Name</th>
                            <th scope="col" class="th1">File Type</th>
                            <th scope="col" class="th1">Link</th>
                            <th scope="col" class="th1">Show</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.StoredFile3VM != null && Model.StoredFile3VM.Count != 0)
                        {
                            int i = 0;
                            foreach (var item in Model.StoredFile3VM)
                            {
                                i++;
                                string shwId = "s3" + @i.ToString();
                                string shwId2 = "t3" + @i.ToString();
                                <tr>
                                    <td>@item.SolrId</td>
                                    <td>@item.FileName</td>
                                    <td>@item.FileType</td>
                                    <td>
                                        <input type="text" id=@shwId class="form-control" value="@(string.IsNullOrEmpty(item.Link) ? "" : item.Link)"
                                       placeholder="Link" name="Link" aria-label="Link" aria-describedby="basic-addon1">
                                    </td>
                                    <td>
                                        <select id=@shwId2 name="Show" aria-label="Show">
                                            @if (item.Show)
                                            {
                                                <option value="true" selected>Yes</option>
                                                <option value="false">No</option>
                                            }
                                            else
                                            {
                                                <option value="true">Yes</option>
                                                <option value="false" selected>No</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td>---</td>
                                <td>---</td>
                                <td>---</td>
                                <td>---</td>
                                <td>---</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" class="btn btn-success" onclick="secondTable(event)">Submit</button>
            </form>
        </div>
    </div>
    <div class="d-flex justify-content-center align-items-center mt-3">
        @if (ViewData["SolrConnected"] != null && ViewData["SolrConnected"]!.Equals(false))
        {
            <h1 style="color:red;">Error connecting to Solr</h1>
        }
    </div>
</body>
<script>
    async function firstTable(event) {
        event.preventDefault();

        var table = document.getElementById("firstTable");
        var StoredFile2VM = [];

        for (var i = 1; i < table.rows.length; i++) {
            var row = table.rows[i];

            var solrIdCell = row.cells[0];
            var fileNameCell = row.cells[1];
            var fileTypeCell = row.cells[2];
            var linkInput = row.querySelector('input[id^="m"]');

            var solrId = solrIdCell.innerText.trim();
            var fileName = fileNameCell.innerText.trim();
            var fileType = fileTypeCell.innerText.trim();
            var linkValue = linkInput.value.trim();

            if (linkValue !== "") {
                StoredFile2VM.push({
                    SolrId: solrId,
                    FileName: fileName,
                    FileType: fileType,
                    Link: linkValue
                });
            }
        }

        try {
            console.log("Form Data:", StoredFile2VM);
            const response = await fetch("/Management/FirstTable", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(StoredFile2VM),
            });

            if (response.status === 302 || response.ok) {
                window.location.href = "https://localhost:8081/Management/Management";
            } else {
                console.error("Failed to add user.");
            }
        } catch (error) {
            window.location.href = "https://localhost:8081/Management/Management";
            console.error("Error adding user:", error);
        }
    }

    async function secondTable(event) {
        // Prevent form submission
        event.preventDefault();

        var table = document.getElementById("secondTable");
        var StoredFile3VM = [];

        for (var i = 1; i < table.rows.length; i++) {
            var row = table.rows[i];

            var solrIdCell = row.cells[0];
            var fileNameCell = row.cells[1];
            var fileTypeCell = row.cells[2];
            var linkInput = row.querySelector('input[id^="s"]');
            var showSelect = row.querySelector('select[id^="t"]');

            var solrId = solrIdCell.innerText.trim();
            var fileName = fileNameCell.innerText.trim();
            var fileType = fileTypeCell.innerText.trim();
            var linkValue = linkInput.value.trim();
            var showValue = showSelect.value.trim();

            if (showValue === "true") {
                showValue = true;
            } else {
                showValue = false;
            }

            console.log("Show: " + showValue)
            if (linkValue !== "") {
                StoredFile3VM.push({
                    SolrId: solrId,
                    FileName: fileName,
                    FileType: fileType,
                    Link: linkValue,
                    Show: showValue
                });
            }
            StoredFile3VM.forEach(function (file) {
                console.log("SolrId: " + file.SolrId + " Type: " + typeof file.SolrId);
                console.log("FileName: " + file.FileName + " Type: " + typeof file.FileName);
                console.log("FileType: " + file.FileType + " Type: " + typeof file.FileType);
                console.log("Link: " + file.Link + " Type: " + typeof file.Link);
                console.log("Show: " + file.Show + " Type: " + typeof file.Show);
            });
        }

        try {
            console.log("JSON Data:", JSON.stringify(StoredFile3VM));
            const response = await fetch("/Management/SecondTable", {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(StoredFile3VM),
            });

            if (response.status === 302 || response.ok) {
                window.location.href = "https://localhost:8081/Management/Management";
            } else {
                console.error("Failed to add user.");
            }
        } catch (error) {
            window.location.href = "https://localhost:8081/Management/Management";
            console.error("Error adding user:", error);
        }
    }

    async function performSearch() {
        var selectedAttribute = document.getElementById("searchAttribute").value;
        var searchQuery = document.getElementById("searchQuery").value;

        var url = '@Url.Action("Search", "Management")' + '?' + selectedAttribute + '=' + searchQuery;
        console.log("Url: " + url);

        // Redirect the user to the constructed URL
        window.location.href = url;
    }

    document.addEventListener("DOMContentLoaded", function () {
        var btnSearch = document.getElementById("btnSearch");
        btnSearch.addEventListener("click", function () {
            performSearch();
        });
    });
</script>